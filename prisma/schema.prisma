// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            Int       @id @default(autoincrement())
    mail          String    @unique
    firstname     String
    lastname      String
    password      String
    type          Int
    id_society    Int?
    society       Society?  @relation(fields: [id_society], references: [id], onDelete: SetNull)
    creation_date DateTime  @default(now())
    rooms         Room[]
    box           Box[]
    Tag           TagUser[]
    Object        Object[]
}

model Room {
    id            Int         @id @default(autoincrement())
    name          String
    creation_date DateTime    @default(now())
    type          Int
    id_user       Int
    stage         Int         @default(0)
    id_TagSociety Int?
    TagSociety    TagSociety? @relation(fields: [id_TagSociety], references: [id], onDelete: SetNull)
    user          User        @relation(fields: [id_user], references: [id], onDelete: Cascade)
    box           Box[]
}

model Society {
    id         Int          @id @default(autoincrement())
    color      String
    User       User[]
    TagSociety TagSociety[]
}

model Box {
    id            Int        @id @default(autoincrement())
    name          String
    comment       String?
    creation_date DateTime   @default(now())
    empty         Boolean    @default(false)
    fragile       Boolean    @default(false)
    id_user       Int
    id_room       Int
    user          User       @relation(fields: [id_user], references: [id], onDelete: Cascade)
    room          Room       @relation(fields: [id_room], references: [id], onDelete: Cascade)
    objects       Object[]
    TagOnBox      TagOnBox[]
}

model TagUser {
    id      Int        @id @default(autoincrement())
    name    String
    user    User       @relation(fields: [id_user], references: [id], onDelete: Cascade)
    id_user Int
    link    TagOnBox[]
}

model TagSociety {
    id         Int     @id @default(autoincrement())
    name       String
    color      String
    id_society Int
    society    Society @relation(fields: [id_society], references: [id], onDelete: SetNull)
    Room       Room[]
}

model TagOnBox {
    box    Box     @relation(fields: [id_box], references: [id], onDelete: Cascade)
    id_box Int
    tag    TagUser @relation(fields: [id_tag], references: [id], onDelete: Cascade)
    id_tag Int

    @@id([id_box, id_tag])
}

model Object {
    id            Int      @id @default(autoincrement())
    name          String
    creation_date DateTime @default(now())
    id_user       Int
    id_box        Int
    user          User     @relation(fields: [id_user], references: [id], onDelete: Cascade)
    box           Box      @relation(fields: [id_box], references: [id], onDelete: Cascade)
}
